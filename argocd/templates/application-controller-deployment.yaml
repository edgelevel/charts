---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-application-controller
  labels:
    app.kubernetes.io/name: {{ include "argo-cd.name" . }}-application-controller
    helm.sh/chart: {{ include "argo-cd.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/part-of: {{ include "argo-cd.name" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "argo-cd.name" . }}-application-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "argo-cd.name" . }}-application-controller
        helm.sh/chart: {{ include "argo-cd.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: application-controller
        app.kubernetes.io/part-of: {{ include "argo-cd.name" . }}
    spec:
      serviceAccountName: argocd-application-controller
      containers:
        - command:
            - argocd-application-controller
            - --status-processors
            - "20"
            - --operation-processors
            - "10"
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.applicationController.image.pullPolicy }}
          name: argocd-application-controller
          ports:
            - containerPort: {{ .Values.applicationController.containerPort }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.applicationController.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.applicationController.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 10
{{- with .Values.applicationController.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.applicationController.volumeMounts }}
          volumeMounts:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.applicationController.volumes }}
      volumes:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.applicationController.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.applicationController.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.applicationController.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.applicationController.podDnsPolicy }}
      dnsPolicy: {{ .Values.applicationController.podDnsPolicy }}
{{- end }}
{{- if .Values.applicationController.podDnsConfig }}
      dnsConfig:
{{ toYaml .Values.applicationController.podDnsConfig | indent 8 }}
{{- end }}
