---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-dex-server
  labels:
    app.kubernetes.io/name: {{ include "argo-cd.name" . }}-dex-server
    helm.sh/chart: {{ include "argo-cd.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/part-of: {{ include "argo-cd.name" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "argo-cd.name" . }}-dex-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "argo-cd.name" . }}-dex-server
        helm.sh/chart: {{ include "argo-cd.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: dex-server
        app.kubernetes.io/part-of: {{ include "argo-cd.name" . }}
    spec:
      serviceAccountName: argocd-dex-server
      initContainers:
        - name: copyutil
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.dexServer.initImage.pullPolicy }}
          command: [cp, /usr/local/bin/argocd-util, /shared]
          volumeMounts:
            - mountPath: /shared
              name: static-files
      containers:
      - name: dex
        image: {{ .Values.dexServer.image.repository }}:{{ .Values.dexServer.image.tag }}
        imagePullPolicy: {{ .Values.dexServer.image.pullPolicy }}
        command: [/shared/argocd-util, rundex]
        ports:
        - containerPort: {{ .Values.dexServer.containerPortHttp }}
        - containerPort: {{ .Values.dexServer.containerPortGrpc }}
        volumeMounts:
        - mountPath: /shared
          name: static-files
        {{- if .Values.dexServer.volumeMounts }}
        {{ toYaml .Values.dexServer.volumeMounts | nindent 8 | trim }}
        {{- end }}
{{- with .Values.dexServer.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}        
      volumes:
      - emptyDir: {}
        name: static-files
      {{- if .Values.dexServer.volumes }}
      {{ toYaml .Values.dexServer.volumes | nindent 6 | trim }}
      {{- end }}}
{{- with .Values.dexServer.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.dexServer.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.dexServer.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.dexServer.podDnsPolicy }}
      dnsPolicy: {{ .Values.dexServer.podDnsPolicy }}
{{- end }}
{{- if .Values.dexServer.podDnsConfig }}
      dnsConfig:
{{ toYaml .Values.dexServer.podDnsConfig | indent 8 }}
{{- end }}